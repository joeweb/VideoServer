<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->

<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute"
		   implements="org.bigbluebutton.common.IBigBlueButtonModule"
		   creationComplete="init()" xmlns:mate="http://mate.asfusion.com/">
	
	<mx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			import mx.core.FlexGlobals;
			import mx.managers.PopUpManager;		
			import org.bigbluebutton.common.LogUtil;
			import org.bigbluebutton.main.events.SettingsEvent;
			import org.bigbluebutton.modules.settings.SettingsPanel;
			import org.bigbluebutton.modules.settings.util.PersistUserPreferences;
			import org.bigbluebutton.modules.settings.util.Requirements;
			
			private var _moduleName:String = "Settings Module";			
			private var _attributes:Object;
			
			private var globalDispatcher:Dispatcher;
			
			private function init():void{
				LogUtil.debug("SettingsModule::init");
			}
			
			public function get moduleName():String {
				return _moduleName;
			}
			
			public function get uri():String {		
				return _attributes.uri + "/" + _attributes.room;
			}
			
			public function get username():String {
				return _attributes.username;
			}
			
			public function get connection():NetConnection {
				return _attributes.connection;
			}
			
			public function get userid():Number {
				return _attributes.userid as Number;
			}
			
			public function get role():String {
				return _attributes.userrole as String;
			}
			
			public function start(attributes:Object):void {	
				_attributes = attributes;
				globalDispatcher = new Dispatcher();
				Requirements.setRequirements(attributes);
				
				globalDispatcher.dispatchEvent(new SettingsEvent(SettingsEvent.SETTINGS_MODULE_LOADED));
				
				var sharedObject:SharedObject = SharedObject.getLocal("bbbUserProperties", "/");
				var firstTime:Boolean = sharedObject.data["previouslyvisited"] as Boolean;
				if (!firstTime) openSettingsPanel();
				
			}
			
			public function stop():void {
			}
			
			private function openSettingsPanel(e:SettingsEvent = null):void{
				var settingsPanel:SettingsPanel = SettingsPanel(PopUpManager.createPopUp(FlexGlobals.topLevelApplication as DisplayObject, SettingsPanel, true));
				
				var point1:Point = new Point();
				// Calculate position of TitleWindow in Application's coordinates. 				
				settingsPanel.x = 0;
				settingsPanel.y = 0;
		//		settingsPanel.x = FlexGlobals.topLevelApplication.mx_internal.Application.width/2 - settingsPanel.width/2;
		//		settingsPanel.y = FlexGlobals.topLevelApplication.mx_internal.Application.height/2 - settingsPanel.height/2;
				
				PersistUserPreferences.saveSettingsVisited();
			}
		]]>
	</mx:Script>
	
	<mate:Listener type="{SettingsEvent.OPEN_SETTINGS_PANEL}" method="openSettingsPanel" />
</mx:Module>
