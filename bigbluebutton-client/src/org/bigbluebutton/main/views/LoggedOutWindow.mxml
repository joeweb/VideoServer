<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->

<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
    title="Logged Out" showCloseButton="false" creationComplete="init()"
    verticalScrollPolicy="off" horizontalScrollPolicy="off"
    x="168" y="86" layout="vertical" width="400" height="100" horizontalAlign="center">
	<mx:Script>
		<![CDATA[
			import mx.core.FlexGlobals;
			import mx.managers.PopUpManager;
			
			import org.bigbluebutton.common.LogUtil;
			import org.bigbluebutton.core.BBB;
			import org.bigbluebutton.main.model.users.events.ConnectionFailedEvent;
			import org.bigbluebutton.util.i18n.ResourceUtil;
						
			[Bindable] private var message:String = "You have logged out of the conference";
			private var urlLoader:URLLoader;
			
			private function init():void {
				addEventListener(Event.CLOSE, onUserLoggedOutWindowClose);
			}
			
            private function redirect():void { 
            	var pageHost:String = FlexGlobals.topLevelApplication.url.split("/")[0];
            	var pageURL:String = FlexGlobals.topLevelApplication.url.split("/")[2];
            	var request:URLRequest = new URLRequest(pageHost + "//" + pageURL + "/bigbluebutton/api/signOut");
				LogUtil.debug("Log out url: " + pageHost + "//" + pageURL + "/bigbluebutton/api/signOut");
				request.method = URLRequestMethod.GET;
				urlLoader = new URLLoader();
				urlLoader.addEventListener(Event.COMPLETE, handleComplete);	
				urlLoader.load(request);
            }
            
			private function handleComplete(e:Event):void {	
				var request:URLRequest = new URLRequest(BBB.initUserConfigManager().getLogoutUrl());
				LogUtil.debug("Logging out to: " + BBB.initUserConfigManager().getLogoutUrl());
				navigateToURL(request, '_self');
				PopUpManager.removePopUp(this);				
			}
			
            private function onUserLoggedOutWindowClose(e:Event):void {
            	PopUpManager.removePopUp(this);
            }
			
			public function setReason(reason:String):void{
				switch(reason){
					case ConnectionFailedEvent.APP_SHUTDOWN:
						message = ResourceUtil.getInstance().getString('bbb.logout.appshutdown');
						break;
					case ConnectionFailedEvent.ASYNC_ERROR:
						message = ResourceUtil.getInstance().getString('bbb.logout.asyncerror');
						break;
					case ConnectionFailedEvent.CONNECTION_CLOSED:
						message = ResourceUtil.getInstance().getString('bbb.logout.connectionclosed');
						break;
					case ConnectionFailedEvent.CONNECTION_FAILED:
						message = ResourceUtil.getInstance().getString('bbb.logout.connectionfailed');
						break;
					case ConnectionFailedEvent.CONNECTION_REJECTED:
						message = ResourceUtil.getInstance().getString('bbb.logout.rejected');
						break;
					case ConnectionFailedEvent.INVALID_APP:
						message = ResourceUtil.getInstance().getString('bbb.logout.invalidapp');
						break;
					case ConnectionFailedEvent.UNKNOWN_REASON:
						message = ResourceUtil.getInstance().getString('bbb.logout.unknown');
						break;
					case ConnectionFailedEvent.USER_LOGGED_OUT:
						message = ResourceUtil.getInstance().getString('bbb.logout.usercommand');
						break;
				}
			}
		]]>
	</mx:Script>

	<mx:Button id="okBtn" label="OK" click="redirect()"/>
	<mx:Label text="{message}"/>
</mx:TitleWindow> 