<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->

<MDIWindow xmlns="flexlib.mdi.containers.*" 
	       xmlns:mx="http://www.adobe.com/2006/mxml" 
	       showCloseButton="true"
	       creationComplete="onCreationComplete()"
		   xmlns:mate="http://mate.asfusion.com/" 
		   title="{ResourceUtil.getInstance().getString('bbb.shortcuthelp.title')}">
		   
	<mx:Script>
		<![CDATA[
			import flash.events.Event;
			import mx.collections.ArrayList;
			import mx.collections.ArrayCollection;
			import org.bigbluebutton.main.events.ShortcutEvent;
			import org.bigbluebutton.util.i18n.ResourceUtil;
			import org.bigbluebutton.common.LogUtil;
			
			private var genKeys:ArrayList;
			private var presKeys:ArrayList;
			private var chatKeys:ArrayList;
			private var audKeys:ArrayList;
			
			private var genResource:Array = [];
			private var presResource:Array = ['bbb.shortcutkey.present.focusslide', 'bbb.shortcutkey.whiteboard.undo'];
			private var chatResource:Array = ['bbb.shortcutkey.chat.chatinput', 'bbb.shortcutkey.chat.chattabs', 'bbb.shortcutkey.chat.chatbox.advance', 
											  'bbb.shortcutkey.chat.chatbox.goback', 'bbb.shortcutkey.chat.chatbox.repeat', 'bbb.shortcutkey.chat.chatbox.golatest', 
											  'bbb.shortcutkey.chat.chatbox.gofirst', 'bbb.shortcutkey.chat.chatbox.goread'];
			private var audResource:Array = ['bbb.shortcutkey.listeners.muteme'];
			[Bindable]
			private var shownKeys:ArrayCollection;
			
			private function onCreationComplete():void {
				LogUtil.debug("WATERFALL: Shortcut window has been opened");
				reloadKeys();
				ResourceUtil.getInstance().addEventListener(Event.CHANGE, reloadKeys); // Listen for locale changing
			}
			
			private function reloadKeys(e:Event = null):void {
				LogUtil.debug("Chad start of function");
				genKeys = loadKeys(genResource);
				LogUtil.debug("CHAD loaded" + genKeys);
				presKeys = loadKeys(presResource);
				LogUtil.debug("CHAD loaded" + presKeys.length);
				chatKeys = loadKeys(chatResource);
				LogUtil.debug("CHAD loaded" + chatKeys.length);
				audKeys = loadKeys(audResource);
				LogUtil.debug("CHAD loaded" + audKeys.length);
				
				changeArray();
			}
			
			private function changeArray():void {
				shownKeys = new ArrayCollection();
				switch(categories.selectedIndex) {
				case 0: //All
					shownKeys.addAll(genKeys);
					shownKeys.addAll(presKeys);
					shownKeys.addAll(chatKeys);
					shownKeys.addAll(audKeys);
					break;
				case 1: //General
					shownKeys.addAll(genKeys);
					break;
				case 2: //Presentation
					shownKeys.addAll(presKeys);
					break;
				case 3: //Chat
					shownKeys.addAll(chatKeys);
					break;
				case 4: //Audio
					shownKeys.addAll(audKeys);
					break;
				}
			}
			
			private function loadKeys(resource:Array):ArrayList {
				var keyList:ArrayList = new ArrayList();
				LogUtil.debug("CHAD " + resource.length);
				var keyCombo:String;
				var indx:int = 255;
				LogUtil.debug("CHAD " + resource.length);
				for (var i:int = 0; i < resource.length; i++) {
					LogUtil.debug("CHAD inside" + resource.length);
					keyCombo = ResourceUtil.getInstance().getString(resource[i]);
					indx = keyCombo.lastIndexOf("+") + 1;
					var key:int = int(keyCombo.substring(indx));
					var convKey:String;
					if (key == 32) { //special case
						convKey = "Space";
					} else {
						convKey = String.fromCharCode(key);
					}
					keyList.addItem({Shortcut:keyCombo.substring(0, indx) + convKey, 
								Function:(ResourceUtil.getInstance().getString(resource[i] + '.function'))});
				}
				LogUtil.debug("CHAD after " + resource.length);
				return keyList;
			}
			
			public function focusCategories():void {
				focusManager.setFocus(categories);
				categories.drawFocus(true);
			}
		]]>
	</mx:Script>
	
	<mx:ComboBox id="categories" labelField="Please select an area for which to view shortcut keys: " editable="false" change="changeArray()">
		<mx:ArrayCollection>
        	<mx:String>{ResourceUtil.getInstance().getString("bbb.shortcuthelp.dropdown.all")}</mx:String>
        	<mx:String>{ResourceUtil.getInstance().getString("bbb.shortcuthelp.dropdown.general")}</mx:String>
         	<mx:String>{ResourceUtil.getInstance().getString("bbb.shortcuthelp.dropdown.presentation")}</mx:String>
         	<mx:String>{ResourceUtil.getInstance().getString("bbb.shortcuthelp.dropdown.chat")}</mx:String>
         	<mx:String>{ResourceUtil.getInstance().getString("bbb.shortcuthelp.dropdown.audio")}</mx:String>
      	</mx:ArrayCollection>
	</mx:ComboBox>
	<mx:DataGrid id="keyList" draggableColumns="false" dataProvider="{shownKeys}" width="100%" height="100%">
		<mx:columns>
			<mx:DataGridColumn dataField="Shortcut" />
			<mx:DataGridColumn dataField="Function" />
		</mx:columns>
	</mx:DataGrid>
</MDIWindow>