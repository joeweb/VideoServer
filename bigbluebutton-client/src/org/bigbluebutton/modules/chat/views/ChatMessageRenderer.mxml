<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" verticalAlign="top" 
		 verticalScrollPolicy="off" xmlns:common="org.bigbluebutton.common.*" dataChange="validateNow()"
		 creationComplete="onCreationComplete()">
	
	<mx:Script>
		<![CDATA[
			import mx.binding.utils.ChangeWatcher;			
			import org.bigbluebutton.common.LogUtil;
			import org.bigbluebutton.modules.chat.model.ChatMessage;

			[Bindable] private var rolledOver:Boolean = false;					
			[Bindable] private var chatMsg:ChatMessage;
			[Bindable] private var chatTime:String;
			
			private function onLinkClick(e:TextEvent):void{
        trace("Clicked on link[" + e.text + "] from chat");
        if (ExternalInterface.available) {
          ExternalInterface.call("chatLinkClicked", e.text);
        } 
			}
			
			private function onCreationComplete():void{
				/** Register a change handler as the renderer get recycled. If we don't
				 * do this, we'll get a stale data which will display the chat 
				 * message repeatedly. (ralam Nov 1, 2010)
				 */
				ChangeWatcher.watch(this, "data", dataChangeHandler);
				if (data != null) {
					chatMsg = data as ChatMessage;
					data = null;
					chatMsg.translateMessage();					
				}
				
				/**
				 * The next line will refresh the display so that chat history don't show up as
				 * squished. Don't know fully hos this works but somehow when I put this in
				 * it fixed the problem. So if you remove this, make sure you test that the
				 * chat history shows up correctly. (ralam Nov 3, 2010)
				 */
				validateNow();
			}
			
			private function dataChangeHandler(e:Event = null):void{
				if (data == null) {
					return;
				}				
				chatMsg = data as ChatMessage;
				data = null;
				chatMsg.translateMessage();	
			}
			
			private function onRollOver():void{
				rolledOver = true;
			}
			
			private function onRollOut():void{
				rolledOver = false;
			}
						
		]]>
	</mx:Script>
	
  <mx:HBox width="100%">
    <mx:Label id="lblName" text="{chatMsg.name} " visible="{!(chatMsg.senderId == chatMsg.lastSenderId)}" color="gray" width="100%" textAlign="left"/>
    <mx:Spacer width="100%"/>
    <mx:Text id="lblTime" htmlText="{chatMsg.translateLocale} {rolledOver ? chatMsg.senderTime : chatMsg.time}" textAlign="right"
             visible="{!(chatMsg.lastTime == chatMsg.time) || !(chatMsg.senderId == chatMsg.lastSenderId)}" 
             color="gray"  width="100%"/>       
  </mx:HBox>
  <mx:HBox width="100%">
    <mx:Spacer width="5"/>
    <mx:Text id="txtMessage" htmlText="{rolledOver ? chatMsg.senderText : chatMsg.translatedText}" link="onLinkClick(event)" color="{chatMsg.senderColor}"
             rollOver="onRollOver()" rollOut="onRollOut()" width="100%" selectable="true"/>
  </mx:HBox>  
</mx:VBox>
