<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->

<MDIWindow xmlns="flexlib.mdi.containers.*" 
	       xmlns:mx="http://www.adobe.com/2006/mxml" 
	       xmlns:chat="org.bigbluebutton.modules.chat.views.components.*"
	       showCloseButton="false"
	       implements="org.bigbluebutton.common.IBbbModuleWindow" 
	       creationComplete="onCreationComplete()"
	       xmlns:components="org.bigbluebutton.modules.chat.view.components.*" 
		   xmlns:mate="http://mate.asfusion.com/" 
		   xmlns:views="org.bigbluebutton.modules.chat.views.*">
	
	<mate:Listener type="{ShortcutEvent.FOCUS_CHAT_INPUT}" method="focusChatInput" />
	<mate:Listener type="{ShortcutEvent.FOCUS_CHAT_TABS}" method="focusChatTabs" />
	
	<mx:Script>
		<![CDATA[
			import org.bigbluebutton.modules.chat.model.ChatOptions;
			import com.asfusion.mate.events.Dispatcher;			
			import flexlib.mdi.events.MDIWindowEvent;			
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.core.FlexGlobals;
			import mx.resources.ResourceBundle;
			import mx.resources.ResourceManager;			
			import org.bigbluebutton.common.events.LocaleChangeEvent;
			import org.bigbluebutton.main.events.ShortcutEvent;
			import org.bigbluebutton.main.views.MainCanvas;
			import org.bigbluebutton.modules.chat.events.TranscriptEvent;
			import org.bigbluebutton.util.i18n.ResourceUtil;
			import org.bigbluebutton.common.LogUtil;
			
			private var _xPosition:int;
			private var _yPosition:int;
			
			private var disp:Dispatcher;
			private var dispState:String;
			[Bindable] public var chatOptions:ChatOptions;
			
			public function getPrefferedPosition():String{
				return chatOptions.position;
			} 
			
			private function onCreationComplete():void {
				/* Set up full screen handler. */
				FlexGlobals.topLevelApplication.stage.addEventListener(FullScreenEvent.FULL_SCREEN, fullScreenHandler);
				dispState = FlexGlobals.topLevelApplication.stage.displayState;
				
				// var disp:Dispatcher = new Dispatcher();
				disp  = new Dispatcher();
//				disp.dispatchEvent(new TranscriptEvent(TranscriptEvent.LOAD_TRANSCRIPT));				
			}
			
			private function fullScreenHandler(evt:FullScreenEvent):void {
/*				dispState = FlexGlobals.topLevelApplication.stage.displayState + " (fullScreen=" + evt.fullScreen.toString() + ")";
				if (evt.fullScreen) {
					txtMsg.text = "Chat not enabled in full screen mode";
					txtMsg.enabled = false;
					sendBtn.enabled = false;
				} else {
					txtMsg.text = "";
					txtMsg.enabled = true;
					sendBtn.enabled = true;
				}
*/			}		
			
			override protected function resourcesChanged():void{
				super.resourcesChanged();
				this.title = ResourceUtil.getInstance().getString("bbb.chat.title");
			}
			
			private function localeChanged(e:LocaleChangeEvent):void{
				resourcesChanged();
			}
            
      private function enableMessageEntryTextBox():void {
//        txtMsg.enabled = true;
      }
            
      private function disableMessageEntryTextBox():void {
//        txtMsg.enabled = false;
      }
			
			private function focusChatInput(e:ShortcutEvent):void{
//				if (txtMsg.enabled){
					//cant get it to focus the whole window as well
//					windowManager.bringToFront(this);
//					focusManager.setFocus(txtMsg);
//				}
			}
			
			private function focusChatTabs(e:ShortcutEvent):void{
//				windowManager.bringToFront(this);
//				focusManager.setFocus(chatView.chatTabs);
			}
		]]>
	</mx:Script>
	
	<views:ChatView id="chatView" chatOptions="{chatOptions}"/>
</MDIWindow>
