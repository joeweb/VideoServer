<?xml version="1.0" encoding="utf-8"?>
<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="300" visible="false" >
	<mx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
			
			import mx.core.Application;
			import mx.managers.PopUpManager;
			
			import org.bigbluebutton.modules.settings.connectors.AppsConnector;
			import org.bigbluebutton.modules.settings.uihelpers.JavaOKEvent;
			import org.bigbluebutton.modules.settings.uihelpers.WarningEvent;
			import org.bigbluebutton.modules.settings.util.JavaCheck;
			import org.bigbluebutton.modules.settings.util.Requirements;
			import org.bigbluebutton.util.i18n.ResourceUtil;
						
			public function init():void{
				checkFlash();
				checkOS();
				checkJava();
			}
			
			private function checkFlash():void{
				var flashVersion:String = Capabilities.version;
				
				var flashVersions:Array = (Capabilities.version.split(" ")[1] as String).split(",");
				var flashRequired:Array = Requirements.flash_required_version.split(",");
				
				trace("version is: " + flashVersions);
				trace("required is " + flashRequired);
				
				for (var i:Number = 0; i< flashRequired.length; i++){
					if (Number(flashRequired[i]) > Number(flashVersions[i])) showFlashError(flashVersion, Requirements.flash_required_version);
				}
				
			}
			
			private function checkOS():void{
				trace("Operating System: " + Capabilities.os);
				var os:Array = Capabilities.os.split(" ");
				//Check for this bug: http://reviews.cnet.com/8301-13727_7-20022842-263.html
				//Fix is to download new flash player 10.2 or above
				if (os[0] == "Mac" && os[1] == "OS" && os[2] == "10.6.5"){
					showMacOS1065iSightError();
				}
			}
			
			private function checkJava():void{
				var javas:Array = JavaCheck.getJREs();
				
				if (javas.length == 0) showFlashError("NO JAVA INSTALLED", Requirements.java_required_version);
				
				trace("Java version required is: " + Requirements.java_required_version);
				trace("Java versions installed: ");
				var highestJava:String = javas[0];
				for each (var java:String in javas){
					trace("Found java " + java);
					var highest:Array = highestJava.split(".");
					var iter:Array = java.split(".");
					
					if (Number(iter[0]) > Number(highest[0])){
						highestJava = java;
					} else if (Number(iter[0]) == Number(highest[0]) && Number(iter[1]) > Number(highest[1])){
						highestJava = java;
					} else if (Number(iter[0]) == Number(highest[0]) && Number(iter[1]) == Number(highest[1])){
						var iterMinor:Number = Number((iter[2] as String).split("_")[1]);
						var highestMinor:Number = Number((highest[2] as String).split("_")[1]);
						if (iterMinor > highestMinor) highestJava = java;
					}
				}
				
				var passedJava:Boolean = true;
				var required:Array = Requirements.java_required_version.split(".");
				highest = highestJava.split(".");
				if (Number(required[0]) > Number(highest[0])){
					passedJava = false;
				} else if (Number(required[0]) == Number(highest[0]) && Number(required[1]) > Number(highest[1])){
					passedJava = false;
				} else if (Number(required[0]) == Number(highest[0]) && Number(required[1]) == Number(highest[1])){
					var requiredMinor:Number = Number((required[2] as String).split("_")[1]);
					var highestJavaMinor:Number = Number((highest[2] as String).split("_")[1]);
					if (requiredMinor > highestJavaMinor) passedJava = false;
				}
				
				if (!passedJava) showJavaError(highestJava, Requirements.java_required_version);
				else sendJavaOK();
			}
			
			private function checkBBBApps():void{
				var appsConnector:AppsConnector = new AppsConnector();
			}
			
			private function sendJavaOK():void{
				dispatchEvent(new JavaOKEvent(JavaOKEvent.JAVA_A_OK));
			}
			
			private function showJavaError(hasVersion:String, needsVersion:String):void{	
				var e:WarningEvent = new WarningEvent(WarningEvent.WARNING_EVENT);
				e.warningLabel = ResourceUtil.getInstance().getString('bbb.settings.java.label');
				e.warningText = javaError(hasVersion, needsVersion);
				e.optionalCommandText = ResourceUtil.getInstance().getString('bbb.settings.java.command'); 
				e.optionalCallbackFunction = installNewestJava;
				dispatchEvent(e);
			}
			
			private function installNewestJava():void{
				JavaCheck.installLatestJRE();
			}
			
			private function showFlashError(hasVersion:String, needsVersion:String):void{
				var e:WarningEvent = new WarningEvent(WarningEvent.WARNING_EVENT);
				e.warningLabel = ResourceUtil.getInstance().getString('bbb.settings.flash.label');
				e.warningText = flashError(hasVersion, needsVersion);
				e.optionalCommandText = ResourceUtil.getInstance().getString('bbb.settings.flash.command');
				e.optionalCallbackFunction = installNewestFlash;
				dispatchEvent(e);
			}
			
			private function installNewestFlash():void{
				navigateToURL(new URLRequest("http://get.adobe.com/flashplayer/"), "_self");
			}
			
			private function showMacOS1065iSightError():void{
				var e:WarningEvent = new WarningEvent(WarningEvent.WARNING_EVENT);
				e.warningLabel = ResourceUtil.getInstance().getString('bbb.settings.isight.label');
				e.warningText = iSightErrorOSX1065();
				e.optionalCommandText = ResourceUtil.getInstance().getString('bbb.settings.isight.command');
				e.optionalCallbackFunction = installFlash102RC2;
				dispatchEvent(e);
			}
			
			private function installFlash102RC2():void{
				navigateToURL(new URLRequest("http://labs.adobe.com/downloads/flashplayer10.html"), "_self");
			}
			
			private static function iSightErrorOSX1065():String{
				return ResourceUtil.getInstance().getString('bbb.settings.isight.text');
			}
			
			private static function javaError(hasVersion:String, needsVersion:String):String{
				return ResourceUtil.getInstance().getString('bbb.settings.java.text', [hasVersion, needsVersion]);
			}
			
			private static function flashError(hasVersion:String, needsVersion:String):String{
				return ResourceUtil.getInstance().getString('bbb.settings.flash.text', [hasVersion, needsVersion]);
			}
		]]>
	</mx:Script>
		
</mx:VBox>
