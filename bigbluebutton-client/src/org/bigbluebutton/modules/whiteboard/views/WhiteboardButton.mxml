<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->

<mx:Button xmlns:mx="http://www.adobe.com/2006/mxml" icon="{whiteboard_icon}" width="25" height="25" click="toggleWhiteboard()" visible="false"
	implements="org.bigbluebutton.modules.present.api.IPresentationButton" xmlns:mate="http://mate.asfusion.com/" toggle="true" creationComplete="toggleWhiteboard()">
	
	<mx:Script>
		<![CDATA[
			import mx.core.Application;
			
			import org.bigbluebutton.common.Images;
			import org.bigbluebutton.common.LogUtil;
			import org.bigbluebutton.modules.present.ui.views.PresentationWindow;
			import org.bigbluebutton.modules.whiteboard.events.WhiteboardButtonEvent;
			import org.bigbluebutton.modules.whiteboard.events.WhiteboardPresenterEvent;
			import org.bigbluebutton.modules.whiteboard.events.WhiteboardUpdate;
			import org.bigbluebutton.util.i18n.ResourceUtil;
			
			private var images:Images = new Images();
			[Bindable] private var whiteboard_icon:Class = images.whiteboard;
			
			private var whiteboardEnabled:Boolean = false;
			private var isPresenter:Boolean = false;
			
			private function toggleWhiteboard():void{
				this.whiteboardEnabled = !this.whiteboardEnabled;
				if (this.whiteboardEnabled) this.selected = true;
				else if (!this.whiteboardEnabled) this.selected = false;
				
				if (whiteboardEnabled) sendEnableWhiteboardEvent();
				else if (!whiteboardEnabled) sendDisableWhiteboardEvent();
			}
			
			private function sendEnableWhiteboardEvent():void{
				dispatchEvent(new WhiteboardButtonEvent(WhiteboardButtonEvent.ENABLE_WHITEBOARD));
				this.toolTip = ResourceUtil.getInstance().getString('bbb.highlighter.button.toolTipHide');
			}
			
			private function sendDisableWhiteboardEvent():void{
				dispatchEvent(new WhiteboardButtonEvent(WhiteboardButtonEvent.DISABLE_WHITEBOARD));
				this.toolTip = ResourceUtil.getInstance().getString('bbb.highlighter.button.toolTipShow');
			}
			
			public function buttonAdded(buttonParent:PresentationWindow):void {
				var e:WhiteboardButtonEvent = new WhiteboardButtonEvent(WhiteboardButtonEvent.WHITEBOARD_ADDED_TO_PRESENTATION);
				e.window = buttonParent;
				dispatchEvent(e);
				
//				buttonParent.addEventListener(KeyboardEvent.KEY_UP, checkWhiteboardKeyCombo);
			}
			
			private function checkWhiteboardKeyCombo(e:KeyboardEvent):void{
				if (this.visible) takeActionOnKeyPressed(e.keyCode);
			}
			
			private function takeActionOnKeyPressed(key:int):void{
				if (key == 87){ //W
					toggleWhiteboard();
				} else if (key == 68){ //D
					this.whiteboardEnabled = true;
					this.selected = true;
					sendEnableWhiteboardEvent();
					dispatchEvent(new WhiteboardButtonEvent(WhiteboardButtonEvent.CHANGE_TO_PENCIL));
				}
			}
			
			public function setButtonVisibility(visibility:Boolean):void{
//				this.visible = visibility;
				//if (visibility) sendEnableWhiteboardEvent();
				//else if (!visibility) sendDisableWhiteboardEvent();
			}
			
			public function setComponentEnabled(enabled:Boolean):void{
				if (enabled && whiteboardEnabled) sendEnableWhiteboardEvent();
				else if (!enabled) sendDisableWhiteboardEvent();
			}
			
			public function presenterChanged(isPresenter:Boolean, presenterName:String):void{
				setComponentEnabled(isPresenter);
				this.isPresenter = isPresenter;
				if(isPresenter) {
					LogUtil.debug("MADE PRESENTER ENABLING WHITEBOARD");
					sendEnableWhiteboardEvent();
				}
			}
			
		]]>
	</mx:Script>
	
</mx:Button>
